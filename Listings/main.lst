C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include"iap15w4k58s4.h"
   2          #include"oled.h"
   3          #include"delay.h"
   4          
   5          sbit LCD_CS =P4^3; //oled片选脚
   6          
   7          sbit K1 = P2^0; //确认
   8          sbit K2 = P2^1; //返回
   9          sbit K3 = P2^2; //上调
  10          sbit K4 = P2^3; //下调
  11          
  12          sbit PB = P0^0; //编码器下调
  13          sbit fmq = P1^2; //蜂鸣器
  14          sbit LED3 = P5^2;//LED灯
  15          
  16          
  17          
  18          unsigned char  scan_flag = 0;//按键标志位
  19          
  20          unsigned char  dis_one = 1;//屏幕级别
  21          unsigned char  dis_two = 1;//屏幕分号
  22          
  23          unsigned int co = 0; //传感器检测到的一氧化碳浓度值
  24          unsigned int co_ppm = 1;//显示CO的浓度值
  25          unsigned int co_time = 1;//CO的检测时间
  26          char co_ppm_dis[] = {'0','0','0','\0'};//CO浓度的显示
  27          
  28          unsigned char uart_flag = 1;//串口1通信标记位
  29          unsigned char co_num[10] = {0};//CO传感器寄存器
  30          unsigned char co_num_n = 0;//CO传感器寄存器内的第几位数
  31          
  32          unsigned char S2FLAG = 1;//串口2通信标记位
  33          unsigned char s2_re_data[50] = {0};//通讯模块寄存器
  34          unsigned char s2_count= 0;//通讯模块寄存器内的第几位数
  35          
  36          //通讯模块的AT指令数组
  37          unsigned char code str5[] = "AT+CMGF=1\r\n";
  38          unsigned char code str6[] = "AT+CSCS=\"GSM\"\r\n";
  39          unsigned char code str7[] = "AT+CMGS=\"19809050776\"\r\n";
  40          
  41          /*----------------------------
  42          MCU-GPIO工作状态初始化
  43          ----------------------------*/
  44          void mcu_init()
  45          {
  46   1        P1M0=0X00;
  47   1        P1M1=0X00;
  48   1        P2M0=0X00;
  49   1        P2M1=0X00;
  50   1        P4M0=0X00;
  51   1        P4M1=0X00;
  52   1        P0M0=0X00;
  53   1        P0M1=0X00;
  54   1        P3M0=0X00;
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 2   

  55   1        P3M1=0X00;
  56   1        P35 = 1;
  57   1      }
  58          
  59          
  60          
  61          /*----------------------------
  62          按键子程序
  63          ----------------------------*/
  64          
  65          char scan()//按键扫描
  66          {
  67   1      if(K1 == 0)
  68   1        {
  69   2        DelayMS(200);//延时去抖动
  70   2        if(K1 == 0)//两遍确定
  71   2          {
  72   3          while(K1 == 0);//长按
  73   3          return 1;//返回值
  74   3          }
  75   2        }
  76   1      if(K2 == 0)
  77   1        {
  78   2        DelayMS(200);
  79   2        if(K2 == 0)
  80   2          {
  81   3          while(K2 == 0);
  82   3          return 2;
  83   3          }
  84   2        }
  85   1      if(K3 == 0)
  86   1        {
  87   2        DelayMS(200);
  88   2        if(K3 == 0)
  89   2          {
  90   3          while(K3 == 0);
  91   3          return 3;
  92   3          }
  93   2        }
  94   1      if(K4 == 0)
  95   1        {
  96   2        DelayMS(200);
  97   2        if(K4 == 0)
  98   2          {
  99   3          while(K4 == 0);
 100   3          return 4;
 101   3          }
 102   2        }
 103   1      return 0;
 104   1      }
 105          
 106          void key_an()//屏幕下的按键功能
 107          {
 108   1        if(dis_one == 1)     //1 确认 2 返回 3 上调 4 下调
 109   1          {
 110   2        if(scan_flag == 1) 
 111   2          {
 112   3           dis_one++; 
 113   3           scan_flag = 0;
 114   3          }
 115   2        }
 116   1        if(dis_one == 2)
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 3   

 117   1          {
 118   2        if(scan_flag == 1) 
 119   2          {
 120   3           dis_one = dis_one+dis_two; 
 121   3           scan_flag = 0;
 122   3          }
 123   2        if(scan_flag == 2) 
 124   2          {
 125   3           dis_one--; 
 126   3           scan_flag = 0;
 127   3          }
 128   2        if(scan_flag == 3) 
 129   2          {
 130   3           dis_two--; 
 131   3           if(dis_two<1) dis_two = 2;
 132   3           scan_flag = 0;
 133   3          }
 134   2        if(scan_flag == 4) 
 135   2          {
 136   3           dis_two++; 
 137   3           if(dis_two>2) dis_two = 1;
 138   3           scan_flag = 0;
 139   3          } 
 140   2        }
 141   1        if((dis_one == 3) || (dis_one == 4))
 142   1          {
 143   2        if(scan_flag == 1)
 144   2          {
 145   3          dis_one = 1;
 146   3          dis_two = 1;
 147   3          scan_flag = 0;
 148   3          }
 149   2        if(scan_flag == 3)
 150   2          {
 151   3          if(dis_two == 1)
 152   3            {
 153   4            co_ppm++;
 154   4            if(co_ppm >500) co_ppm = 1;
 155   4            scan_flag = 0;
 156   4            }
 157   3          if(dis_two == 2)
 158   3            {
 159   4            co_time++;
 160   4            if(co_time >600) co_ppm = 1;
 161   4            scan_flag = 0;
 162   4            }
 163   3          }
 164   2      
 165   2        if(scan_flag == 4)
 166   2          {
 167   3          if(dis_two == 1)
 168   3            {
 169   4            co_ppm--;
 170   4            if(co_ppm <1) co_ppm = 100;
 171   4            scan_flag = 0;
 172   4            }
 173   3          if(dis_two == 2)
 174   3            {
 175   4            co_time--;
 176   4            if(co_time <1) co_ppm = 600;
 177   4            scan_flag = 0;
 178   4            }
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 4   

 179   3          }
 180   2        }
 181   1      }
 182          
 183          /*----------------------------
 184          屏幕显示子程序
 185          ----------------------------*/
 186          void oled_init()//屏幕初始化
 187          {
 188   1        LCD_CS= 0;
 189   1        LCD_Init();   
 190   1        LCD_Fill(0xff); 
 191   1        DelayMS(100); 
 192   1        LCD_Fill(0x00);
 193   1        DelayMS(100);     
 194   1        LCD_CLS();  
 195   1        DelayMS(100);  
 196   1        DelayUS(100);
 197   1      }
 198          
 199          
 200          void dis1()//一号屏幕显示
 201          {
 202   1      co_ppm_dis[0] = co%1000/100+'0';
 203   1      co_ppm_dis[1] = co%100/10+'0';
 204   1      co_ppm_dis[2] = co%10+'0';
 205   1      LCD_CLS();
 206   1      LCD_P8x16Str(25,1,"welcome ");
 207   1      LCD_P8x16Str(25,3,"co_ppm:");
 208   1      LCD_P8x16Str(81,3,co_ppm_dis);
 209   1      LCD_P8x16Str_1(96,5,"CONT");
 210   1      }
 211          
 212          void dis2()
 213          {
 214   1      LCD_CLS();
 215   1      if(dis_two == 1) LCD_P8x16Str_1(25,1,"co_ppm");
 216   1      else LCD_P8x16Str(25,1,"co_ppm");
 217   1      if(dis_two == 2) LCD_P8x16Str_1(25,3,"co_time");
 218   1      else LCD_P8x16Str(25,3,"co_time");
 219   1      LCD_P8x16Str_1(1,5,"BACK");
 220   1      LCD_P8x16Str_1(96,5,"CONT");  
 221   1      }
 222          
 223          void dis3()
 224          {
 225   1      LCD_CLS();  
 226   1      LCD_P8x16Str_1(25,2,"co_ppm:");
 227   1      co_ppm_dis[0] = co_ppm%1000/100+'0';
 228   1      co_ppm_dis[1] = co_ppm%100/10+'0';
 229   1      co_ppm_dis[2] = co_ppm%10+'0';
 230   1      LCD_P8x16Str_1(81,2,co_ppm_dis);
 231   1      LCD_P8x16Str_1(88,5,"ENTER"); 
 232   1      }
 233          
 234          void dis4()
 235          {
 236   1      LCD_CLS();  
 237   1      LCD_P8x16Str_1(25,2,"co_time:");
 238   1      co_ppm_dis[0] = co_time%1000/100+'0';
 239   1      co_ppm_dis[1] = co_time%100/10+'0';
 240   1      co_ppm_dis[2] = co_ppm%10+'0';
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 5   

 241   1      LCD_P8x16Str_1(89,2,co_ppm_dis);
 242   1      LCD_P8x16Str_1(88,5,"ENTER"); 
 243   1      }
 244          
 245          void str_dis()//屏幕跳转函数
 246          {
 247   1      if(dis_one == 1) dis1();
 248   1      if(dis_one == 2) dis2();
 249   1      if(dis_one == 3) 
 250   1        {
 251   2        if(dis_two == 1) dis3();
 252   2        if(dis_two == 2) dis4();
 253   2        }
 254   1      }
 255          
 256          
 257          /*----------------------------
 258          通过打开中断0发送编码器数据
 259          ----------------------------*/
 260          void int0_init()//中断0的初始化
 261          {
 262   1      TCON = TCON|0X01;
 263   1      EX0 = 1;
 264   1      EA = 1;
 265   1      }
 266          
 267          void int0_inter()interrupt 0//编码器的终端服务程序
 268          {
 269   1      if(PB == 0) scan_flag = 3;
 270   1      if(PB == 1) scan_flag = 4;
 271   1      }
 272          
 273          /*----------------------------
 274          通过串口1发送传感器数据
 275          ----------------------------*/
 276          void UartInit1(void)    //串口1中断的初始化
 277          {
 278   1        SCON = 0x50;    //8位数据,可变波特率
 279   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
 280   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
 281   1        AUXR1 |= 0x7F;      //切换串口
 282   1        TMOD &= 0x0F;   //设定定时器1为16位自动重装方式
 283   1        TL1 = 0xE0;       //设定定时初值
 284   1        TH1 = 0xFE;       //设定定时初值
 285   1        ET1 = 0;        //禁止定时器1中断
 286   1        TR1 = 1;        //启动定时器1
 287   1        ES = 1;             //允许串行口1中断                   
 288   1        EA = 1;             //总中断允许
 289   1      }
 290          
 291          void uart1_inter()interrupt 4//传感器的通信数据
 292          {
 293   1      if(TI)
 294   1        {
 295   2        TI = 0;
 296   2        uart_flag = 1;
 297   2        }
 298   1      if(RI)
 299   1        {
 300   2        RI = 0;
 301   2        co_num[co_num_n] = SBUF;
 302   2        co_num_n++;
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 6   

 303   2        if(co_num_n == 9)
 304   2          {
 305   3          co_num_n = 0;
 306   3          co = (co_num[4]<<8)+co_num[5];//获取气体浓度值
 307   3          if(dis_one == 1)
 308   3            {
 309   4            dis1();
 310   4            }
 311   3          }
 312   2        }
 313   1      }
 314          
 315          /*----------------------------
 316          通过串口2发送AT指令
 317          ----------------------------*/
 318          void UartInit2(void)    //115200bps@11.0592MHz
 319          {
 320   1      
 321   1        S2CON = 0x50;   //8位数据,可变波特率
 322   1        AUXR |= 0x04;   //定时器2时钟为Fosc,即1T
 323   1        T2L = 0xE8;   //设定定时初值
 324   1        T2H = 0xFF;   //设定定时初值
 325   1        AUXR |= 0x10;   //启动定时器2
 326   1        IE2|=0X01;
 327   1        EA = 1;
 328   1      }
 329          
 330          void uart2_inter()interrupt 8
 331          {
 332   1      if(S2CON&0X01)
 333   1        {
 334   2        S2CON&=0XFE;
 335   2        s2_re_data[s2_count] = S2BUF;
 336   2        s2_count++;
 337   2        if(s2_count == 50) s2_count = 0;
 338   2        }
 339   1        if(S2CON&0X02)
 340   1        {
 341   2        S2CON&=0XFD;
 342   2        S2FLAG = 1;
 343   2        }
 344   1      }
 345          
 346          void u2_send_char(unsigned char s2_data)//通过串口2发送串口数据
 347          {
 348   1      while(S2FLAG == 0);
 349   1      S2BUF = s2_data;
 350   1      S2FLAG = 0;
 351   1      }
 352          
 353          void u2_clr()
 354          {
 355   1      unsigned char i;
 356   1      for(i=0;i<50;i++)
 357   1        s2_re_data[i] = 0;
 358   1      s2_count = 0; 
 359   1      }
 360          
 361          void u2_send_str(unsigned char *p)//通过串口2发送字符串
 362          {
 363   1      while(*p) u2_send_char(*p++);
 364   1      }
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 7   

 365          
 366          void send_dt()
 367          {
 368   1      u2_send_str(str5);
 369   1      DelayMS(100);
 370   1      u2_send_str(str6);
 371   1      DelayMS(100);
 372   1      u2_send_str(str7);
 373   1      DelayMS(100);
 374   1      } 
 375          
 376          /*----------------------------
 377          报警函数
 378          ----------------------------*/
 379          void Baojing()
 380          {
 381   1          
 382   1          fmq = 1;  
 383   1          LED3 = 1; 
 384   1        DelayMS(100);
 385   1        fmq = 0;
 386   1        LED3 = 0;
 387   1        DelayMS(1000);
 388   1      }
 389          
 390          /*----------------------------
 391          主函数
 392          ----------------------------*/
 393          void main(void)//主函数
 394          {
 395   1      mcu_init();
 396   1      oled_init();
 397   1      UartInit2();
 398   1      int0_init();
 399   1      UartInit1();
 400   1      DelayMS(100);
 401   1      dis1(); 
 402   1        while(1)
 403   1       { 
 404   2        scan_flag = scan();
 405   2        if(scan_flag != 0)
 406   2          {
 407   3            key_an();
 408   3              str_dis();
 409   3          }
 410   2         if(co > co_ppm )
 411   2        {
 412   3          DelayMS(100);
 413   3              Baojing();
 414   3          DelayMS(100);
 415   3          send_dt();
 416   3            DelayMS(50);
 417   3          u2_send_str("SOS");
 418   3          u2_send_char(0X1A); 
 419   3          DelayMS(2000);  
 420   3          } 
 421   2       } 
 422   1      }
 423          
 424          
 425          
 426          
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2020 15:12:22 PAGE 8   

 427          
 428          
 429          
 430          
 431          
 432          
 433          
 434          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1341    ----
   CONSTANT SIZE    =    113    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     77       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
